{"version":3,"sources":["components/GoodsList.js","App.js","index.js"],"names":["GoodsList","state","initialList","props","goods","reverseList","copy","setState","reverse","sortAlphabetically","sort","a","b","localeCompare","sortByLength","length","reset","prevState","this","classNane","className","map","good","key","type","onClick","React","Component","goodsFromServer","App","isListHiden","renderList","ReactDOM","render","document","getElementById"],"mappings":"yPAKaA,G,MAAb,4MACEC,MAAQ,CACNC,YAAY,YAAK,EAAKC,MAAMC,OAC5BA,MAAO,EAAKD,MAAMC,OAHtB,EAMEC,YAAc,WACZ,IAAMC,EAAI,YAAO,EAAKL,MAAMG,OAE5B,EAAKG,UAAS,iBAAO,CACnBH,MAAOE,EAAKE,eAVlB,EAcEC,mBAAqB,WACnB,IAAMH,EAAI,YAAO,EAAKL,MAAMG,OAE5B,EAAKG,UAAS,iBAAO,CACnBH,MAAOE,EAAKI,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,WAlBjD,EAsBEE,aAAe,WACb,IAAMR,EAAI,YAAO,EAAKL,MAAMG,OAE5B,EAAKG,UAAS,iBAAO,CACnBH,MAAOE,EAAKI,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEI,OAASH,EAAEG,eA1B9C,EA8BEC,MAAQ,WACN,EAAKT,UAAS,SAAAU,GAAS,MAAK,CAC1Bb,MAAOa,EAAUf,iBAhCvB,4CAoCE,WACE,IAAQE,EAAUc,KAAKjB,MAAfG,MAER,OACE,yBAAKe,UAAU,kBACb,wBAAIC,UAAU,QACXhB,EAAMiB,KAAI,SAAAC,GAAI,OACb,wBAAIC,IAAKD,GACNA,OAKP,4BACEE,KAAK,SACLC,QAASP,KAAKb,aAFhB,WAOA,4BACEmB,KAAK,SACLC,QAASP,KAAKT,oBAFhB,uBAOA,4BACEe,KAAK,SACLC,QAASP,KAAKJ,cAFhB,kBAOA,4BACEU,KAAK,SACLC,QAASP,KAAKF,OAFhB,cAtER,GAA+BU,IAAMC,YCA/BC,G,MAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WAGWC,EAAb,4MACE5B,MAAQ,CACNG,MAAM,GAAD,OAAMwB,GACXE,aAAa,GAHjB,EAMEC,WAAa,WACX,EAAKxB,UAAS,SAAAU,GAAS,MAAK,CAC1Ba,aAAcb,EAAUa,iBAR9B,4CAYE,WACE,IAAQ1B,EAAUc,KAAKjB,MAAfG,MACA0B,EAAgBZ,KAAKjB,MAArB6B,YAER,OACE,yBAAKV,UAAU,OACXU,EAGE,4BACEN,KAAK,SACLC,QAASP,KAAKa,YAFhB,SAFA,kBAAC,EAAD,CAAW3B,MAAOA,SAnB9B,GAAyBsB,IAAMC,WCd/BK,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.6eeb7020.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './GoodsList.css';\n\nexport class GoodsList extends React.Component {\n  state = {\n    initialList: [...this.props.goods],\n    goods: this.props.goods,\n  };\n\n  reverseList = () => {\n    const copy = [...this.state.goods];\n\n    this.setState(() => ({\n      goods: copy.reverse(),\n    }));\n  }\n\n  sortAlphabetically = () => {\n    const copy = [...this.state.goods];\n\n    this.setState(() => ({\n      goods: copy.sort((a, b) => a.localeCompare(b)),\n    }));\n  }\n\n  sortByLength = () => {\n    const copy = [...this.state.goods];\n\n    this.setState(() => ({\n      goods: copy.sort((a, b) => a.length - b.length),\n    }));\n  }\n\n  reset = () => {\n    this.setState(prevState => ({\n      goods: prevState.initialList,\n    }));\n  }\n\n  render() {\n    const { goods } = this.state;\n\n    return (\n      <div classNane=\"list-container\">\n        <ul className=\"list\">\n          {goods.map(good => (\n            <li key={good}>\n              {good}\n            </li>\n          ))}\n        </ul>\n\n        <button\n          type=\"button\"\n          onClick={this.reverseList}\n        >\n          Reverse\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={this.sortAlphabetically}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={this.sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={this.reset}\n        >\n          Reset\n        </button>\n      </div>\n    );\n  }\n}\n\nGoodsList.propTypes = {\n  goods: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n};\n","import React from 'react';\nimport { GoodsList } from './components/GoodsList';\n\nimport './App.css';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport class App extends React.Component {\n  state = {\n    goods: [...goodsFromServer],\n    isListHiden: true,\n  }\n\n  renderList = () => {\n    this.setState(prevState => ({\n      isListHiden: !prevState.isListHiden,\n    }));\n  };\n\n  render() {\n    const { goods } = this.state;\n    const { isListHiden } = this.state;\n\n    return (\n      <div className=\"App\">\n        {!isListHiden\n          ? <GoodsList goods={goods} />\n          : (\n            <button\n              type=\"button\"\n              onClick={this.renderList}\n            >\n              Start\n            </button>\n          )\n        }\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}